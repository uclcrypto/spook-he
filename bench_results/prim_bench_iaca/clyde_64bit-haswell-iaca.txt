Intel(R) Architecture Code Analyzer Version -  v3.0-28-g1ba2cbb build date: 2017-10-23;16:42:45
Analyzed File -  ./../bench_results/prim_bench_iaca/clyde_64bit-haswell-iaca.o
Binary Format - 64Bit
Architecture  -  SKX
Analysis Type - Throughput

Throughput Analysis Report
--------------------------
Block Throughput: 36.00 Cycles       Throughput Bottleneck: Backend
Loop Count:  22
Port Binding In Cycles Per Iteration:
--------------------------------------------------------------------------------------------------
|  Port  |   0   -  DV   |   1   |   2   -  D    |   3   -  D    |   4   |   5   |   6   |   7   |
--------------------------------------------------------------------------------------------------
| Cycles | 24.5     0.0  | 24.5  |  3.0     3.0  |  3.0     3.0  |  0.0  | 24.5  | 24.5  |  0.0  |
--------------------------------------------------------------------------------------------------

DV - Divider pipe (on port 0)
D - Data fetch pipe (on ports 2 and 3)
F - Macro Fusion with the previous instruction occurred
* - instruction micro-ops not bound to a port
^ - Micro Fusion occurred
# - ESP Tracking sync uop was issued
@ - SSE instruction followed an AVX256/AVX512 instruction, dozens of cycles penalty is expected
X - instruction not supported, was not accounted in Analysis

| Num Of   |                    Ports pressure in cycles                         |      |
|  Uops    |  0  - DV    |  1   |  2  -  D    |  3  -  D    |  4   |  5   |  6   |  7   |
-----------------------------------------------------------------------------------------
|   1*     |             |      |             |             |      |      |      |      | mov r12, rdx
|   1*     |             |      |             |             |      |      |      |      | mov r10, r11
|   1      |             | 0.5  |             |             |      |      | 0.5  |      | and rdx, rcx
|   1*     |             |      |             |             |      |      |      |      | mov rax, r11
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | shr r12, 0x1
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | shr r10, 0x1
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | and rax, rcx
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | and r12, rcx
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | and r10, rcx
|   1*     |             |      |             |             |      |      |      |      | mov r11, r12
|   1      |             | 0.5  |             |             |      |      | 0.5  |      | and r11, rdx
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | xor r10, r11
|   1*     |             |      |             |             |      |      |      |      | mov r11, r12
|   1      |             | 0.5  |             |             |      |      | 0.5  |      | and r11, rax
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | xor r11, rdx
|   1      |             | 1.0  |             |             |      |      |      |      | lea rbx, ptr [r11+r11*1]
|   1      |             |      |             |             |      | 0.5  | 0.5  |      | and r11, r10
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | or rbx, r10
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | xor r11, rax
|   1      |             | 0.5  |             |             |      |      | 0.5  |      | and r10, rax
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | xor r12, r10
|   1      |             | 1.0  |             |             |      |      |      |      | lea rdx, ptr [r11+r11*1]
|   1      |             |      |             |             |      |      | 1.0  |      | rorx rax, rbx, 0x18
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | xor rax, rbx
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | or rdx, r12
|   1      |             |      |             |             |      |      | 1.0  |      | rorx r10, rax, 0x6
|   1      | 1.0         |      |             |             |      |      |      |      | rorx rbx, rbx, 0x22
|   1      |             | 1.0  |             |             |      |      |      |      | xor rbx, rax
|   1      |             |      |             |             |      |      | 1.0  |      | rorx rax, rdx, 0x18
|   1      |             |      |             |             |      | 1.0  |      |      | xor rax, rdx
|   1      | 0.5         | 0.5  |             |             |      |      |      |      | xor r10, rbx
|   1*     |             |      |             |             |      |      |      |      | mov rbp, rax
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx rbx, rax, 0x6
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx rax, rdx, 0x22
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx r11, r10, 0x3e
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor rax, rbp
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor r11, r10
|   2^     |             | 0.5  | 1.0     1.0 |             |      | 0.5  |      |      | xor r10, qword ptr [rsi]
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor rax, rbx
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx rdx, r11, 0x33
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor r10, rdx
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx r11, r11, 0x1e
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx rbx, rax, 0x3e
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor rbx, rax
|   2^     |             | 0.5  |             | 1.0     1.0 |      | 0.5  |      |      | xor rax, qword ptr [rsi+0x8]
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | xor r10, r11
|   1*     |             |      |             |             |      |      |      |      | mov rdx, rax
|   1*     |             |      |             |             |      |      |      |      | mov r11, r10
|   1      |             |      |             |             |      |      | 1.0  |      | rorx rax, rbx, 0x33
|   1      | 0.5         | 0.5  |             |             |      |      |      |      | xor rdx, rax
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | shr r11, 0x1
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx rax, rbx, 0x1e
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor rdx, rax
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | and r11, rcx
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | and r10, rcx
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | add r8d, 0x1
|   1*     |             |      |             |             |      |      |      |      | mov rax, rdx
|   1*     |             |      |             |             |      |      |      |      | mov rbx, rdx
|   1*     |             |      |             |             |      |      |      |      | mov rdx, r11
|   1      |             |      |             |             |      |      | 1.0  |      | shr rax, 0x1
|   1      | 0.5         | 0.5  |             |             |      |      |      |      | and rdx, r10
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | and rbx, rcx
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | and rax, rcx
|   1      |             | 0.5  |             |             |      |      | 0.5  |      | xor rax, rdx
|   1*     |             |      |             |             |      |      |      |      | mov rdx, r11
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | and rdx, rbx
|   1      |             | 0.5  |             |             |      |      | 0.5  |      | xor r10, rdx
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | lea rbp, ptr [r10+r10*1]
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | and r10, rax
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | or rbp, rax
|   1      |             | 0.5  |             |             |      |      | 0.5  |      | xor r10, rbx
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | and rbx, rax
|   1*     |             |      |             |             |      |      |      |      | mov eax, r8d
|   1      |             | 0.5  |             |             |      |      | 0.5  |      | add r10, r10
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx rdx, rbp, 0x18
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor rdx, rbp
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | xor r11, rbx
|   1*     |             |      |             |             |      |      |      |      | mov r12, rdx
|   1*     |             |      |             |             |      |      |      |      | mov rbx, r10
|   1      |             | 0.5  |             |             |      |      | 0.5  |      | or rbx, r11
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx r11, rdx, 0x6
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx rdx, rbp, 0x22
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor rdx, r12
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor rdx, r11
|   1*     |             |      |             |             |      |      |      |      | mov r12, rdx
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx rbp, rdx, 0x3e
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor rbp, rdx
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx rdx, rbx, 0x18
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor rdx, rbx
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx rbx, rbx, 0x22
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx r11, rdx, 0x6
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor rbx, rdx
|   2      |             | 1.0  |             |             |      | 1.0  |      |      | mul r9d
|   1*     |             |      |             |             |      |      |      |      | mov r10, rbx
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | xor r10, r11
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx r11, rbp, 0x33
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx rbp, rbp, 0x1e
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | shr edx, 0x1
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | rorx rbx, r10, 0x3e
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor rbx, r10
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | lea eax, ptr [rdx+rdx*2]
|   1*     |             |      |             |             |      |      |      |      | mov edx, r8d
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | sub edx, eax
|   1*     |             |      |             |             |      |      |      |      | mov rax, rdx
|   1      |             |      | 1.0     1.0 |             |      |      |      |      | mov rdx, qword ptr [rsi+0x10]
|   1      | 0.5         |      |             |             |      |      | 0.5  |      | shl rax, 0x4
|   2      |             | 0.5  |             | 1.0     1.0 |      | 0.5  |      |      | xor rdx, qword ptr [rsp+rax*1+0x10]
|   1      |             | 0.5  |             |             |      | 0.5  |      |      | xor rdx, r12
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | xor rdx, r11
|   1      |             |      | 1.0     1.0 |             |      |      |      |      | mov r11, qword ptr [rsi+0x18]
|   1      |             | 0.5  |             |             |      |      | 0.5  |      | xor rdx, rbp
|   2      | 0.5         |      |             | 1.0     1.0 |      | 0.5  |      |      | xor r11, qword ptr [rsp+rax*1+0x18]
|   1      |             | 0.5  |             |             |      |      | 0.5  |      | add rsi, 0x20
|   1      | 0.5         |      |             |             |      | 0.5  |      |      | xor r11, r10
|   1      |             |      |             |             |      |      | 1.0  |      | rorx r10, rbx, 0x33
|   1      | 1.0         |      |             |             |      |      |      |      | rorx rbx, rbx, 0x1e
|   1      |             | 1.0  |             |             |      |      |      |      | xor r11, r10
|   1      |             |      |             |             |      | 1.0  |      |      | xor r11, rbx
|   1*     |             |      |             |             |      |      |      |      | cmp r8d, 0x6
|   0*F    |             |      |             |             |      |      |      |      | jnz 0xfffffffffffffe3f
Total Num Of Uops: 124
Analysis Notes:
Backend allocation was stalled due to unavailable allocation resources.
